{"ast":null,"code":"var _jsxFileName = \"/Users/bcastellan/Documents/personal/secret_santa/src/components/FinishSendEmail.tsx\";\nimport * as React from 'react';\nimport arrayShuffle from 'array-shuffle';\nimport { private_prefix_email } from \"../private_email_for_test\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FinishSendEmail(_ref) {\n  let {\n    persons\n  } = _ref;\n  const randomPersons = arrayShuffle(persons);\n  randomPersons.map((person, index) => {\n    let email = private_prefix_email + \"+\" + person.name + \"@gmail.com\";\n    // TODO send !!\n  });\n\n  function getNextPersonFor(index) {\n    if (randomPersons.length === index + 1) {\n      return randomPersons[0];\n    }\n    return randomPersons[index + 1];\n  }\n  return (\n    /*#__PURE__*/\n    // TODO: see how to combine stuff!!\n    _jsxDEV(\"div\", {\n      children: randomPersons.map((person, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: person.name + \" => \" + getNextPersonFor(index).name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  );\n}\n_c = FinishSendEmail;\nvar _c;\n$RefreshReg$(_c, \"FinishSendEmail\");","map":{"version":3,"names":["React","arrayShuffle","private_prefix_email","FinishSendEmail","persons","randomPersons","map","person","index","email","name","getNextPersonFor","length"],"sources":["/Users/bcastellan/Documents/personal/secret_santa/src/components/FinishSendEmail.tsx"],"sourcesContent":["import * as React from 'react';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport {Person} from \"../Person\";\nimport arrayShuffle from 'array-shuffle';\nimport {private_prefix_email} from \"../private_email_for_test\";\n\nexport default function FinishSendEmail( {persons}: { persons: Person[] }) {\n\n    const randomPersons = arrayShuffle(persons);\n\n\n    randomPersons.map((person, index) => {\n        let email = private_prefix_email + \"+\" + person.name + \"@gmail.com\"\n        // TODO send !!\n    })\n    function getNextPersonFor(index: number): Person {\n        if (randomPersons.length === index + 1) {\n            return randomPersons[0];\n        }\n        return randomPersons[index + 1]\n    }\n    return (\n        // TODO: see how to combine stuff!!\n        <div>\n            { randomPersons.map((person, index) => (\n                <div>{ person.name + \" => \" +\n                    (getNextPersonFor(index).name)\n                }</div>\n                    ))\n                }\n        </div>\n    );\n}"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAI9B,OAAOC,YAAY,MAAM,eAAe;AACxC,SAAQC,oBAAoB,QAAO,2BAA2B;AAAC;AAE/D,eAAe,SAASC,eAAe,OAAoC;EAAA,IAAlC;IAACC;EAA8B,CAAC;EAErE,MAAMC,aAAa,GAAGJ,YAAY,CAACG,OAAO,CAAC;EAG3CC,aAAa,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;IACjC,IAAIC,KAAK,GAAGP,oBAAoB,GAAG,GAAG,GAAGK,MAAM,CAACG,IAAI,GAAG,YAAY;IACnE;EACJ,CAAC,CAAC;;EACF,SAASC,gBAAgB,CAACH,KAAa,EAAU;IAC7C,IAAIH,aAAa,CAACO,MAAM,KAAKJ,KAAK,GAAG,CAAC,EAAE;MACpC,OAAOH,aAAa,CAAC,CAAC,CAAC;IAC3B;IACA,OAAOA,aAAa,CAACG,KAAK,GAAG,CAAC,CAAC;EACnC;EACA;IAAA;IACI;IACA;MAAA,UACMH,aAAa,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC9B;QAAA,UAAOD,MAAM,CAACG,IAAI,GAAG,MAAM,GACtBC,gBAAgB,CAACH,KAAK,CAAC,CAACE;MAAK;QAAA;QAAA;QAAA;MAAA,QAE7B;IAAC;MAAA;MAAA;MAAA;IAAA;EAER;AAEd;AAAC,KA1BuBP,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}