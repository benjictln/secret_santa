[{"/Users/bcastellan/Documents/personal/secret_santa/src/index.tsx":"1","/Users/bcastellan/Documents/personal/secret_santa/src/reportWebVitals.ts":"2","/Users/bcastellan/Documents/personal/secret_santa/src/App.tsx":"3","/Users/bcastellan/Documents/personal/secret_santa/src/components/DeletableChips.tsx":"4","/Users/bcastellan/Documents/personal/secret_santa/src/Person.ts":"5","/Users/bcastellan/Documents/personal/secret_santa/src/components/RegisterPersonPage.tsx":"6","/Users/bcastellan/Documents/personal/secret_santa/src/components/FinishSendEmail.tsx":"7"},{"size":554,"mtime":1670080311628,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1670080311628,"results":"10","hashOfConfig":"9"},{"size":765,"mtime":1670089834648,"results":"11","hashOfConfig":"9"},{"size":375,"mtime":1670089869196,"results":"12","hashOfConfig":"9"},{"size":180,"mtime":1670086596377,"results":"13","hashOfConfig":"9"},{"size":3217,"mtime":1670089899719,"results":"14","hashOfConfig":"9"},{"size":1857,"mtime":1670089989479,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1npgfxo",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"/Users/bcastellan/Documents/personal/secret_santa/src/index.tsx",[],[],"/Users/bcastellan/Documents/personal/secret_santa/src/reportWebVitals.ts",[],[],"/Users/bcastellan/Documents/personal/secret_santa/src/App.tsx",[],[],"/Users/bcastellan/Documents/personal/secret_santa/src/components/DeletableChips.tsx",[],[],"/Users/bcastellan/Documents/personal/secret_santa/src/Person.ts",[],[],[],"/Users/bcastellan/Documents/personal/secret_santa/src/components/RegisterPersonPage.tsx",[],[],"/Users/bcastellan/Documents/personal/secret_santa/src/components/FinishSendEmail.tsx",["39"],[],"import * as React from 'react';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport {Person} from \"../Person\";\nimport arrayShuffle from 'array-shuffle';\nimport {Box} from \"@mui/material\";\n// import emailjs from '@emailjs/browser';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\n\nexport default function FinishSendEmail( {persons}: { persons: Person[] }) {\n\n    const randomPersons = arrayShuffle(persons);\n\n    function sendEmail({email, body}: {email: string, body: string}) {\n        // emailjs.sendForm('YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', form.current, 'YOUR_PUBLIC_KEY')\n        //     .then((result) => {\n        //         console.log(result.text);\n        //     }, (error) => {\n        //         console.log(error.text);\n        //     });\n        // TODO: register in app, but need to give access..\n    }\n\n\n    randomPersons.forEach((person, index) => {\n        let nextPerson = getNextPersonFor(index);\n        let body = \"Hello, \" + person.name + \" (\" + person.email + \"),\\n\" +\n            \"You have to buy a gift 🎁 for: \" + nextPerson.name + \" (\" + nextPerson.email + \").\\n\" +\n            \"Happy Christmas!! 🎅🎄\";\n        let email = person.email\n        sendEmail({email, body})\n    })\n\n\n    function getNextPersonFor(index: number): Person {\n        if (randomPersons.length === index + 1) {\n            return randomPersons[0];\n        }\n        return randomPersons[index + 1]\n    }\n    return (\n        // TODO: see how to combine stuff!!\n        <Box className=\"App-header\">\n            { randomPersons.map((person, index) => (\n                <Box><Chip label={ person.name }/>\n                    <ArrowForwardIcon />\n                    <Chip label={ getNextPersonFor(index).name }/>\n                </Box>\n                    ))\n                }\n        </Box>\n    );\n}",{"ruleId":"40","severity":1,"message":"41","line":3,"column":8,"nodeType":"42","messageId":"43","endLine":3,"endColumn":13},"@typescript-eslint/no-unused-vars","'Stack' is defined but never used.","Identifier","unusedVar"]